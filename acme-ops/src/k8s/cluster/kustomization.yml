apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

secretGenerator:
  - name: grafana-admin
    literals:
      - admin-user=admin
      - admin-password=admin

resources:
  - ssl
  - mailhog.yml
  - ingress.yml

helmCharts:
  - name: loki
    releaseName: loki
    repo: https://grafana.github.io/helm-charts
  - name: promtail
    releaseName: promtail
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      config:
        clients:
          - url: http://loki:3100/loki/api/v1/push
  - name: jaeger
    releaseName: jaeger
    repo: https://jaegertracing.github.io/helm-charts
    valuesInline:
      provisionDataStore:
        cassandra: false
      allInOne:
        enabled: true
      storage:
        type: none
      agent:
        enabled: false
      collector:
        enabled: false
      query:
        enabled: false
  - name: prometheus
    releaseName: prometheus
    repo: https://prometheus-community.github.io/helm-charts
    valuesInline:
      alertmanager:
        enabled: false
      kubeStateMetrics:
        enabled: false
      nodeExporter:
        enabled: false
      pushgateway:
        enabled: false
  - name: opentelemetry-collector
    releaseName: opentelemetry-collector
    repo: https://open-telemetry.github.io/opentelemetry-helm-charts
    valuesInline:
      mode: deployment
      ports:
        metrics:
          enabled: true
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
  - name: grafana
    releaseName: grafana
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      testFramework:
        enabled: false
      admin:
        existingSecret: grafana-admin
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://prometheus-server
              version: 1
              editable: false
            - name: Loki
              type: loki
              access: proxy
              url: http://loki:3100
              version: 1
              editable: true # So that derived fields can be added in the UI, not available through provisioning yet
            - name: Jaeger
              type: jaeger
              access: proxy
              url: http://jaeger-query:16686
              version: 1
              editable: false
        prometheus:
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          version: 1
          editable: false
        loki:
          type: loki
          access: proxy
          url: http://loki:3100
          version: 1
          editable: true # So that derived fields can be added in the UI, not available throuhg privisioning yet
        jaeger:
          type: jaeger
          access: proxy
          url: http://jaeger-query:16686
          version: 1
          editable: false
  - name: ingress-nginx
    releaseName: ingress-nginx
    repo: https://kubernetes.github.io/ingress-nginx
    namespace: ingress-nginx
    valuesInline:
      controller:
        metrics:
          enabled: true
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: 10254
        config:
          data:
            allow-snippet-annotations: "true"
            enable-opentracing: "true"
            opentracing-operation-name: "$request_method $host"
            opentracing-location-operation-name: "$namespace $service_name"
            jaeger-collector-host: jaeger.default.svc.cluster.local
            jaeger-collector-port: "6831"
            jaeger-service-name: ingress-nginx
            jaeger-sampler-host: jaeger.default.svc.cluster.local
            jaeger-sampler-port: "5778"
            jaeger-sampler-type: const
            jaeger-sampler-param: "1"
