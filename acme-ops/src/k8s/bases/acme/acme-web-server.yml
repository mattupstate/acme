---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: acme-web-server-postgres
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: acme-web-server
      app.kubernetes.io/component: postgres
  serviceName: acme-web-server-postgres
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acme-web-server
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12.3-alpine
          env: [ ]
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgresdata
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgresdata
  volumeClaimTemplates:
    - metadata:
        name: postgresdata
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: acme-web-server-postgres
  labels:
    app.kubernetes.io/name: acme-web-server
    app.kubernetes.io/component: postgres
spec:
  selector:
    app.kubernetes.io/name: acme-web-server
    app.kubernetes.io/component: postgres
  ports:
    - port: 5432
      protocol: TCP
      name: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acme-web-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acme
      app.kubernetes.io/component: acme-web-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acme
        app.kubernetes.io/component: acme-web-server
    spec:
      initContainers:
        - name: liquibase
          image: acme/acme-data-sql
          imagePullPolicy: IfNotPresent
          args: [ "status" ]
          env:
            - name: DB_HOST
              value: acme-web-server-postgres
      containers:
        - name: web-server
          image: acme/acme-web-server
          imagePullPolicy: IfNotPresent
          env: [ ]
          ports:
            - name: http
              containerPort: 8080
          volumeMounts: [ ]
        - name: oathkeeper
          image: oryd/oathkeeper:v0.39
          imagePullPolicy: IfNotPresent
          args: [ "serve", "proxy", "-c", "/etc/oathkeeper/oathkeeper.yml" ]
          ports:
            - name: public
              containerPort: 4455
            - name: admin
              containerPort: 4456
          volumeMounts: [ ]
      volumes: [ ]

---
apiVersion: v1
kind: Service
metadata:
  name: acme-web-server
  labels:
    app.kubernetes.io/name: acme
    app.kubernetes.io/component: acme-web-server
spec:
  selector:
    app.kubernetes.io/name: acme
    app.kubernetes.io/component: acme-web-server
  ports:
    - port: 80
      targetPort: 4455
