version: '3'

env:
  KUBERNETES_VERSION: 1.26.1

tasks:
  # Certs and secrets
  dev:validate-kubectx:
    cmds:
      - |
        kubectl config current-context |
        python -c '
        import sys
        current = sys.stdin.readlines()[0].rstrip()
        current in ("minikube", "k3d-acme") or sys.exit(1)'

  dev:make-certs:
    dir: cluster/dev/001/.certs
    cmds:
      - mkcert '*.nip.io'
      - mkcert -install
    status:
      - ls _wildcard.nip.io*

  dev:fetch-secrets:
    cmds:
      - OP_SECRET_ID=$DEV_OP_SECRET_ID ./cluster/dev/fetch-secrets.sh

  dev:enable-overlay-module:
    platforms: [linux]
    cmds:
      - sudo modprobe overlay

  # Layer 001
  dev:provision-001-init:
    dir: cluster/dev/001
    cmds:
      - terraform init
    sources:
      - main.tf
    generates:
      - .terraform.lock.hcl
      - .terraform/**/*

  dev:provision-001:
    deps: [ dev:validate-kubectx, dev:provision-001-init, dev:make-certs ]
    dir: cluster/dev/001
    env:
      KUBE_CTX:
        sh: kubectl config current-context
    cmds:
      - terraform apply -auto-approve

  # Layer 002
  dev:provision-002-init:
    dir: cluster/dev/002
    cmds:
      - terraform init
    sources:
      - main.tf
    generates:
      - .terraform.lock.hcl
      - .terraform/**/*

  dev:provision-002:
    deps: [dev:validate-kubectx, dev:provision-002-init, dev:fetch-secrets]
    dir: cluster/dev/002
    env:
      KUBE_CTX:
        sh: kubectl config current-context
    cmds:
      - >-
        kubectl -n management wait --for=condition=Ready --timeout=120s pod/vault-0
      - >-
        kubectl -n management exec vault-0 -- cat /vault/data/init.json | \
            jq '{"vault_root_token": .root_token}' > .auto.tfvars.json
      - >-
        terraform apply -auto-approve

  # All layers
  dev:provision:
    cmds:
      - task: dev:provision-001
      - task: dev:provision-002

  # Minikube
  minikube:start:
    deps: [dev:enable-overlay-module]
    env:
      MINIKUBE_CPUS: "4"
      MINIKUBE_MEM: "4g"
      MINIKUBE_DISK_SIZE: "48g"
    cmds:
      - >-
        minikube start --kubernetes-version=v$KUBERNETES_VERSION \
            --cpus $MINIKUBE_CPUS \
            --memory "$MINIKUBE_MEM" \
            --disk-size "$MINIKUBE_DISK_SIZE" \
            --extra-config=apiserver.service-node-port-range=1-65535 \
            --ports=80:80 \
            --ports=443:443
    status:
      - minikube status > /dev/null 2>&1

  minikube:delete:
    cmds:
      - minikube delete

  # K3D
  k3d:start:
    cmds:
      - >-
        k3d cluster create acme \
          -p "80:80@loadbalancer" \
          -p "443:443@loadbalancer" \
          --k3s-arg "--disable=traefik@server:0" \
          --image rancher/k3s:v$KUBERNETES_VERSION-k3s1
    status:
      - k3d cluster list -o json | jq -e '.[] | select(.name == "'acme'")' > /dev/null
